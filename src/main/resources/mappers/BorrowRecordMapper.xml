<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tx.springboot.bmsystem.dao.BorrowRecordMapper" >
  <resultMap id="BaseResultMap" type="com.tx.springboot.bmsystem.pojo.BorrowRecord" >
    <constructor >
      <idArg column="borrow_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="book_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="book_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="states" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="date" jdbcType="DATE" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    borrow_id, user_name, book_id, book_name, states, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from borrow_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from borrow_record
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from borrow_record
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecordExample" >
    delete from borrow_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecord" >
    insert into borrow_record (borrow_id, user_name, book_id, 
      book_name, states, date
      )
    values (#{borrowId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{bookId,jdbcType=INTEGER}, 
      #{bookName,jdbcType=VARCHAR}, #{states,jdbcType=INTEGER},current_date)
  </insert>
  <insert id="insertSelective" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecord" >
    insert into borrow_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="bookName != null" >
        book_name,
      </if>
      <if test="states != null" >
        states,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        #{borrowId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        #{states,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecordExample" resultType="java.lang.Integer" >
    select count(*) from borrow_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update borrow_record
    <set >
      <if test="record.borrowId != null" >
        borrow_id = #{record.borrowId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null" >
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.states != null" >
        states = #{record.states,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update borrow_record
    set borrow_id = #{record.borrowId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      states = #{record.states,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecord" >
    update borrow_record
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null" >
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="states != null" >
        states = #{states,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
    </set>
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tx.springboot.bmsystem.pojo.BorrowRecord" >
    update borrow_record
    set user_name = #{userName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      book_name = #{bookName,jdbcType=VARCHAR},
      states = #{states,jdbcType=INTEGER},
      date = current_date
    where borrow_id = #{borrowId,jdbcType=INTEGER}
  </update>
  <!-- 根据名字查询用户借书记录-->
  <select id="selectByUserName" resultType="com.tx.springboot.bmsystem.pojo.BorrowRecord" parameterType="String" >
    select
        borrow_id,
        user_name,
        book_id,
        book_name,
        states,
        date
    from borrow_record
    where user_name = #{value}
  </select>
  <select id="selectRecordCount" resultType="Integer">
     select count(*) from borrow_record
  </select>
  <!--分页查询所有记录-->
  <select id="selectAllByPage" resultMap="BaseResultMap">
    select * from borrow_record limit  #{currIndex},#{pageSize}
  </select>
</mapper>